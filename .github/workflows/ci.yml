name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          MYSQL_DATABASE: ${{ vars.MYSQL_DATABASE }}
        ports:
          - ${{ vars.SPRING_DATASOURCE_PORT }}:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      # 현재 저장소의 소스 코드와 서브 모듈 내려 받기
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ secrets.ACTION_TOKEN }} # 조직이 아닌 개인 사용자 토큰이므로 유의할 것!

      # 1) 소스 체크아웃
      - name: Checkout
        uses: actions/checkout@v4

      # 2) JDK 21 설치
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3) Gradle 캐싱 & 래퍼 사용
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # 4) gradlew 실행 권한 부여
      - name: Add +x permission to gradlew
        run: chmod +x gradlew

      # 5) 빌드 + 테스트 (DB 연결 환경변수 주입)
      - name: Build with Gradle
        run: ./gradlew clean build
        env:
          SPRING_DATASOURCE_URL: jdbc:mysql://${{ vars.SPRING_DATASOURCE_HOST }}:${{ vars.SPRING_DATASOURCE_PORT }}/${{ vars.MYSQL_DATABASE }}
          SPRING_DATASOURCE_USERNAME: ${{ secrets.MYSQL_USER_ID }}
          SPRING_DATASOURCE_PASSWORD: ${{ secrets.MYSQL_USER_PASSWORD }}
          SPRING_PROFILES_ACTIVE: dev

      # 6) JUnit 결과 리포트
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5
        if: success() || failure()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

      # 7) 빌드 산출물 업로드
      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-libs
          path: |
            build/libs/*.jar
            Dockerfile
